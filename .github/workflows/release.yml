name: release
on:
  push:
    tags:
      - '*'
jobs:
  goreleaser:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      deployments: write
      packages: write

    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Prepare
        id: prepare
        run: |
          # Get rid of v prefix.
          ref_name="${GITHUB_REF_NAME/v/}"
          echo "version=$ref_name" >> $GITHUB_ENV

          # Check if tag is a valid semver without any suffixes; it must not be a pre-release.
          if [[ "$ref_name" =~ ^(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)$ ]]; then
            echo "pre_release=false" >> $GITHUB_ENV
          fi
      -
        name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.18'
      -
        name: Set up gcloud
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
          export_default_credentials: true
          credentials_file_path: ${{ runner.temp }}/gcloud
      -
        name: Release notes
        run: |
          go run ./cmd/release-notes/main.go -version "${GITHUB_REF_NAME}" > ${{ runner.temp }}/releasenotes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          distribution: goreleaser
          version: latest
          args: release --rm-dist --release-notes=${{ runner.temp }}/releasenotes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          HOMEBREW_TAP_GITHUB_TOKEN: ${{ secrets.HOMEBREW_TAP_GITHUB_TOKEN }}
          # SCOOP_BUCKET_GITHUB_TOKEN: ${{ secrets.SCOOP_BUCKET_GITHUB_TOKEN }}
      -
        name: Copy to latest
        if: env.pre_release == 'false'
        run: gsutil -m cp "gs://rdme-artifacts-b4e64f/${{ env.version }}/*" gs://rdme-artifacts-b4e64f/latest
