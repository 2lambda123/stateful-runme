# EXPERIMENTAL: This is a work in progress and may change at any time.
# The idea behind runme.yaml is to provide a way to define consistent
# configuration per project, regardless whether blocks from Markdown
# are executed in VS Code or using the runme CLI.
#
# You can test it with the "runme beta" commands.
version: v1alpha1

# Indicate the root of the runme project. "." means that
# the project root directory will be used.
project:
  dir: "."
  # If true, the project root will be searched upwards starting from "dir".
  # If found, the repo root will be used as the project root.
  find_repo_upward: true
  ignore:
    - "node_modules"
    - ".venv"
  disable_gitignore: false

# It's possible to point at a single file as well.
# filename: "README.md"

# List of dotenv files to load.
env:
  use_system_env: true
  sources:
    - ".env"
    - ".env.local"

# The list of filters to apply to blocks.
# "condition" must return a boolean value.
# You can learn about the syntax at https://expr-lang.org/docs/language-definition.
# Available fields are defined in [config.FilterDocumentEnv] and [config.FilterBlockEnv].
filters:
  # Do not allow unnamed code blocks.
  - type: "FILTER_TYPE_BLOCK"
    condition: "is_named"
  # Do not allow code blocks without a language.
  - type: "FILTER_TYPE_BLOCK"
    condition: "language != ''"
  # Do not allow code blocks starting with "test".
  - type: "FILTER_TYPE_BLOCK"
    condition: "!hasPrefix(name, 'test')"

server:
  # Also unix:///path/to/file.sock is supported.
  address: localhost:7890
  tls:
    enabled: true
    # If not specified, default paths will be used.
    # cert_file: "/path/to/cert.pem"
    # key_file: "/path/to/key.pem"

# Kernels are available runtime environments for runme in which
# code blocks will be executed. Kernels are used in the order they
# are defined based on availability.
#
# Kernel should contain all programs necessary to run all code blocks.
# For example, if your README.md defines "bash" and "python" code blocks,
# you should have a kernel that can run both bash and python code.
#
# A custom docker-based kernel is recommended as it will help to provide
# a hermetic environment.
kernels:
  - "@type": "type.googleapis.com/runme.config.v1alpha1.Config.LocalKernel"
    name: "local"
  - "@type": "type.googleapis.com/runme.config.v1alpha1.Config.DockerKernel"
    name: "docker"
    image: runme-kernel:latest
    build:
      context: ./experimental/docker
      dockerfile: Dockerfile

log:
  enabled: true
  path: "/var/tmp/runme.log"
  verbose: true
