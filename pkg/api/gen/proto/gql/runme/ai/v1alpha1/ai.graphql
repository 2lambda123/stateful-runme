"""
 The AIService service is used to provide assistant capabilities to Runme.

"""
directive @AIService on FIELD_DEFINITION
"""
 Wrapper message for `bool`.

 The JSON representation for `BoolValue` is JSON `true` and `false`.

"""
type BoolValue {
	"""
	 The bool value.
	
	"""
	value: Boolean
}
"""
 Wrapper message for `bool`.

 The JSON representation for `BoolValue` is JSON `true` and `false`.

"""
input BoolValueInput {
	"""
	 The bool value.
	
	"""
	value: Boolean
}
scalar Bytes
type Cell {
	kind: CellKind
	value: String
	languageId: String
	metadata: [Cell_MetadataEntry!]
	textRange: TextRange
	outputs: [CellOutput!]
	executionSummary: CellExecutionSummary
}
type CellExecutionSummary {
	executionOrder: UInt32Value
	success: BoolValue
	timing: ExecutionSummaryTiming
}
input CellExecutionSummaryInput {
	executionOrder: UInt32ValueInput
	success: BoolValueInput
	timing: ExecutionSummaryTimingInput
}
input CellInput {
	kind: CellKind
	value: String
	languageId: String
	metadata: [Cell_MetadataEntryInput!]
	textRange: TextRangeInput
	outputs: [CellOutputInput!]
	executionSummary: CellExecutionSummaryInput
}
enum CellKind {
	CELL_KIND_UNSPECIFIED
	CELL_KIND_MARKUP
	CELL_KIND_CODE
}
type CellOutput {
	items: [CellOutputItem!]
	metadata: [CellOutput_MetadataEntry!]
	processInfo: CellOutputProcessInfo
}
input CellOutputInput {
	items: [CellOutputItemInput!]
	metadata: [CellOutput_MetadataEntryInput!]
	processInfo: CellOutputProcessInfoInput
}
type CellOutputItem {
	data: Bytes
	type: String
	mime: String
}
input CellOutputItemInput {
	data: Bytes
	type: String
	mime: String
}
type CellOutputProcessInfo {
	exitReason: ProcessInfoExitReason
	pid: Int64Value
}
input CellOutputProcessInfoInput {
	exitReason: ProcessInfoExitReasonInput
	pid: Int64ValueInput
}
type CellOutput_MetadataEntry {
	key: String
	value: String
}
input CellOutput_MetadataEntryInput {
	key: String
	value: String
}
type Cell_MetadataEntry {
	key: String
	value: String
}
input Cell_MetadataEntryInput {
	key: String
	value: String
}
type ExecutionSummaryTiming {
	startTime: Int64Value
	endTime: Int64Value
}
input ExecutionSummaryTimingInput {
	startTime: Int64ValueInput
	endTime: Int64ValueInput
}
input FrontmatterInput {
	shell: String
	cwd: String
	skipPrompts: Boolean
	runme: FrontmatterRunmeInput
	category: String
	terminalRows: String
}
input FrontmatterRunmeInput {
	id: String
	version: String
	session: RunmeSessionInput
}
input GenerateCellsRequestInput {
	notebook: NotebookInput
}
type GenerateCellsResponse {
	cells: [Cell!]
}
"""
 Wrapper message for `int64`.

 The JSON representation for `Int64Value` is JSON string.

"""
type Int64Value {
	"""
	 The int64 value.
	
	"""
	value: Int
}
"""
 Wrapper message for `int64`.

 The JSON representation for `Int64Value` is JSON string.

"""
input Int64ValueInput {
	"""
	 The int64 value.
	
	"""
	value: Int
}
type Mutation {
	"""
	 GenerateCells uses the AI to generate cells to insert into the notebook.
	
	"""
	aIServiceGenerateCells(in: GenerateCellsRequestInput): GenerateCellsResponse
}
input NotebookInput {
	cells: [CellInput!]
	metadata: [Notebook_MetadataEntryInput!]
	frontmatter: FrontmatterInput
}
input Notebook_MetadataEntryInput {
	key: String
	value: String
}
type ProcessInfoExitReason {
	type: String
	code: UInt32Value
}
input ProcessInfoExitReasonInput {
	type: String
	code: UInt32ValueInput
}
type Query {
	dummy: Boolean
}
input RunmeSessionDocumentInput {
	relativePath: String
}
input RunmeSessionInput {
	id: String
	document: RunmeSessionDocumentInput
}
type TextRange {
	start: Int
	end: Int
}
input TextRangeInput {
	start: Int
	end: Int
}
"""
 Wrapper message for `uint32`.

 The JSON representation for `UInt32Value` is JSON number.

"""
type UInt32Value {
	"""
	 The uint32 value.
	
	"""
	value: Int
}
"""
 Wrapper message for `uint32`.

 The JSON representation for `UInt32Value` is JSON number.

"""
input UInt32ValueInput {
	"""
	 The uint32 value.
	
	"""
	value: Int
}
